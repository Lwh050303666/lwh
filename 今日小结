int atoi (const char * str);     /* 将字符串转换为整数
解析 C 字符串str ，将其内容解释为整数，并返回类型为 的值int。

该函数首先丢弃尽可能多的空格字符（例如空间)，直到找到第一个非空白字符。然后，从该字符开始，取一个可选的初始正号或负号，后跟尽可能多的十进制数字，并将它们解释为数值。

字符串可以在构成整数的字符之后包含其他字符，这些字符将被忽略，并且不会影响此函数的行为。如果str

中的第一个非空白字符序列不是有效的整数，或者由于str为空或仅包含空白字符而不存在这样的序列，则不执行转换并返回零。*/

 #define SWAP(x) (x = (((x & 0x55555555) << 1) + ((x & 0xAAAAAAAA) >> 1)))  的作用是 将 32 位无符号整数 x 中所有相邻的两位互换，也就是把二进制表示中 “第 0 位↔第 1 位、第 2 位↔第 3 位、……” 这样的每对位进行对调。

1. 宏功能概述
交换相邻位：把 x 的每一对相邻位互换，比如把位编号 0 与 1、2 与 3、4 与 5……分别对调。

原子更新：宏内部直接对 x 赋值，替换为位交换后的结果。

2. 实现原理
2.1 掩码提取
x & 0x55555555

0x55555555 的二进制为 0101 0101 …（共 32 位），其中低位起编号为 0、2、4…的偶数位为 1，其它位为 0。

该操作保留 x 中编号为 0、2、4…的偶数位，其它位清零。 
GeeksforGeeks

x & 0xAAAAAAAA

0xAAAAAAAA 的二进制为 1010 1010 …（共 32 位），其中低位起编号为 1、3、5…的奇数位为 1，其它位为 0。

该操作保留 x 中编号为 1、3、5…的奇数位，其它位清零。



指令 | 含义 | 用例
#ifdef | if defined — 如果宏已被定义，则编译后续代码 | #ifdef FEATURE_X
#ifndef | if not defined — 如果宏未被定义，则编译后续代码 | #ifndef FOO_H
#if | 条件编译，可用于更复杂的表达式 | #if VERSION >= 2
#elif/#else | 与 #if/#ifdef/#ifndef 配合使用，构建多分支 | #ifndef A\n#elif defined B\n#else


offsetof (type,member)   返回成员偏移量
此宏具有函数形式，返回数据结构或联合类型type中成员member 的偏移量（以字节为单位） 。 返回值是一个size_t类型的无符号整数值，表示指定成员与其结构开头之间的字节数。


srand(time(0));   int x = rand() % 10000;    概述
在 C/C++ 中，srand(time(0)) 常用于为伪随机数生成函数 rand() 设置种子，使得每次程序运行时，生成的随机数序列不再相同 
Stack Overflow
srand() 函数
srand(unsigned int seed) 定义于 <cstdlib>（或 C 语言中的 <stdlib.h>），用于初始化伪随机数生成器的种子值 
Programiz
如果不调用 srand()，则 rand() 会使用默认种子（通常等同于 srand(1)），导致每次运行产生相同的数列 
Programiz
建议仅在程序开始时调用一次 srand()，以后直接使用 rand() 获取随机数即可 
计算机科学系
time(0) 的作用
time(0)（或 time(NULL)）来自 <ctime>（或 C 语言中的 <time.h>），返回自 Unix 纪元（1970年1月1日00:00 UTC）以来经过的秒数 
mathbits.com
因为系统时钟以秒为单位不断变化，用它作为 srand() 的种子可保证每次运行程序时的种子值不同，从而生成不同的随机序列 
mathbits.com
为什么要这样做
避免重复序列：若对每次运行都使用固定种子（如 srand(1)），则 rand() 总会重复相同序列，失去随机性 
Stack Overflow
简单且高效：使用当前时间作为种子，不需额外输入或复杂操作，就能获得一个“看似随机”的起始点 
CPlusPlus
非加密用途：此方法适合一般游戏、模拟等场景，但并非加密安全的随机数生成方式；若需安全随机，应使用专门的加密库或 C++11 及以上的 <random> 模块 
Stack Overflow
。   例如：#include <iostream>
#include <cstdlib>  // for srand(), rand()
#include <ctime>    // for time()

int main() {
    // 用当前时间（秒级别）设置随机数种子
    srand(static_cast<unsigned>(time(0)));

    // 生成并输出 5 个伪随机数
    for (int i = 0; i < 5; ++i) {
        std::cout << rand() << " ";
    }
    std::cout << std::endl;
    return 0;
}















